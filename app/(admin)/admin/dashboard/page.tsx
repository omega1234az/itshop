"use client";
import { useState } from "react";
import { Line, Bar, Pie, Doughnut } from "react-chartjs-2";
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  PointElement,
  LineElement,
  ArcElement,
  Title,
  Tooltip,
  Legend,
} from "chart.js";

ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  PointElement,
  LineElement,
  ArcElement,
  Title,
  Tooltip,
  Legend
);

export default function AdminDashboard() {
  const [totalRevenue, setTotalRevenue] = useState<number>(35000);
  const [totalOrders, setTotalOrders] = useState<number>(150);
  const [totalUsers, setTotalUsers] = useState<number>(120);
  const [pendingOrders, setPendingOrders] = useState<number>(20);
  const [avgOrderValue, setAvgOrderValue] = useState<number>(totalRevenue / totalOrders);

  // ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (‡πÉ‡∏´‡∏°‡πà)
  const dailySalesData = {
    labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
    datasets: [
      {
        label: "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô",
        data: [100, 200, 400, 300, 500, 700, 600, 800, 900, 1000],
        borderColor: "blue",
        backgroundColor: "rgba(0, 0, 255, 0.2)",
        tension: 0.3,
      },
    ],
  };

  // ‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏Å‡πà‡∏≤)
  const salesByCategoryData = {
    labels: ["CPU", "Mainboard", "Ram", "SSD"],
    datasets: [
      {
        label: "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢",
        data: [5000, 12000, 8000, 4000],
        backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#4CAF50"],
      },
    ],
  };

  // ‡∏Å‡∏£‡∏≤‡∏ü‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÉ‡∏´‡∏°‡πà)


  return (
    <div className="flex">
      {/* Sidebar ‡πÄ‡∏°‡∏ô‡∏π */}
      
      {/* Main Content */}
      <div className="flex-1 p-4">
        <h1 className="text-xl font-bold mb-3">Dashboard Admin</h1>

        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-2 mb-4">
          <Card title="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°" value={`‡∏ø${totalRevenue}`} icon="üí∞" />
          <Card title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" value={totalOrders} icon="üì¶" />
          <Card title="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" value={totalUsers} icon="üë•" />
          <Card title="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" value={pendingOrders} icon="‚è≥" />
        </div>

        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {/* ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô */}
          <div className="bg-white p-4 shadow rounded-lg">
            <h2 className="text-sm font-semibold mb-2">‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</h2>
            <Line data={dailySalesData} options={{ responsive: true }} />
          </div>

          {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div className="bg-white p-4 shadow rounded-lg">
            <h2 className="text-sm font-semibold mb-2">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</h2>
            <Bar data={salesByCategoryData} options={{ responsive: true }} />
          </div>

          
        </div>
      </div>
    </div>
  );
}

// Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
type CardProps = {
  title: string;
  value: number | string;
  icon: string;
};

function Card({ title, value, icon }: CardProps) {
  return (
    <div className="bg-white p-2 shadow rounded-lg flex items-center">
      <span className="text-lg mr-2">{icon}</span>
      <div>
        <h3 className="text-sm font-semibold">{title}</h3>
        <p className="text-lg font-bold">{value}</p>
      </div>
    </div>
  );
}
